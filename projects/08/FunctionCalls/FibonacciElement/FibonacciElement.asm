@256
D=A
@SP
M=D
@0
D=A
@LCL
M=D
@0
D=A
@ARG
M=D
@0
D=A
@THIS
M=D
@0
D=A
@THAT
M=D
@751059039504738
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@ARG
M=D
@5
D=A
@ARG
M=M-D
@0
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(751059039504738)
//-------function Main.fibonacci 0-------
(Main.fibonacci)
//-------push argument 0-------
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//-------push constant 2-------
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//-------lt-------
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=0
@END751059044246133
D;JGE
@SP
A=M-1
M=-1
(END751059044246133)
@SP
//-------if-goto IF_TRUE-------
@SP
M=M-1
A=M
D=M
@Main.fibonacci.IF_TRUE
D;JNE
//-------goto IF_FALSE-------
@Main.fibonacci.IF_FALSE
0;JMP
//-------label IF_TRUE-------
(Main.fibonacci.IF_TRUE)
//-------push argument 0-------
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//-------return-------
@LCL
D=M
@R11
M=D
@5
D=A
@R11
A=M
A=A-D
D=M
@R12
M=D
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@ARG
D=D+M
@R14
M=D
@R13
D=M
@R14
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R11
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R11
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R11
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R11
A=M
A=A-D
D=M
@LCL
M=D
@R12
A=M
0;JMP
//-------label IF_FALSE-------
(Main.fibonacci.IF_FALSE)
//-------push argument 0-------
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//-------push constant 2-------
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//-------sub-------
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//-------call Main.fibonacci 1-------
@751059044700296
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@ARG
M=D
@5
D=A
@ARG
M=M-D
@1
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(751059044700296)
//-------push argument 0-------
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//-------push constant 1-------
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//-------sub-------
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//-------call Main.fibonacci 1-------
@751059044865042
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@ARG
M=D
@5
D=A
@ARG
M=M-D
@1
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(751059044865042)
//-------add-------
@SP
M=M-1
A=M
D=M
A=A-1
M=D+M
//-------return-------
@LCL
D=M
@R11
M=D
@5
D=A
@R11
A=M
A=A-D
D=M
@R12
M=D
@SP
M=M-1
A=M
D=M
@R13
M=D
@0
D=A
@ARG
D=D+M
@R14
M=D
@R13
D=M
@R14
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R11
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R11
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R11
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R11
A=M
A=A-D
D=M
@LCL
M=D
@R12
A=M
0;JMP
//-------function Sys.init 0-------
(Sys.init)
//-------push constant 4-------
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//-------call Main.fibonacci 1-------
@751059045805949
D=A
@SP
M=M+1
A=M
A=A-1
M=D
@LCL
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@ARG
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THIS
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@THAT
D=M
@SP
M=M+1
A=M
A=A-1
M=D
@SP
D=M
@ARG
M=D
@5
D=A
@ARG
M=M-D
@1
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(751059045805949)
//-------label WHILE-------
(Sys.init.WHILE)
//-------goto WHILE-------
@Sys.init.WHILE
0;JMP
