// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[0..2], a=x0, b=x1, c=x2, d=x3, e=x4, f=x5, g=x6, h=x7);

    And(a=load, b=x0, out=load0);
    And(a=load, b=x1, out=load1);
    And(a=load, b=x2, out=load2);
    And(a=load, b=x3, out=load3);
    And(a=load, b=x4, out=load4);
    And(a=load, b=x5, out=load5);
    And(a=load, b=x6, out=load6);
    And(a=load, b=x7, out=load7);

    RAM64(in=in, load=load0, address=address[3..8], out=o0);
    RAM64(in=in, load=load1, address=address[3..8], out=o1);
    RAM64(in=in, load=load2, address=address[3..8], out=o2);
    RAM64(in=in, load=load3, address=address[3..8], out=o3);
    RAM64(in=in, load=load4, address=address[3..8], out=o4);
    RAM64(in=in, load=load5, address=address[3..8], out=o5);
    RAM64(in=in, load=load6, address=address[3..8], out=o6);
    RAM64(in=in, load=load7, address=address[3..8], out=o7);

    Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address[0..2], out=out);


    
}